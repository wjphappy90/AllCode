<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/data/jpa 
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
						http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- 连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.255.10:1521:ORCL" />
		<property name="user" value="bos_256" />
		<property name="password" value="bos_256" />
	</bean>
	
	<!-- spring整合JPA -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="cn.itcast.bos.domain" />
		<!-- 指定持久层提供者为Hibernate -->
		<property name="persistenceProvider">
			<bean class="org.hibernate.ejb.HibernatePersistence" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- 自动建表 -->
				<property name="generateDdl" value="true" />
				<property name="database" value="ORACLE" />
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- 组件扫描 @Server @Controller @Repository -->
<!-- 	<context:component-scan base-package="cn.itcast.bos.service,cn.itcast.bos.web"/> -->
	<context:component-scan base-package="cn.itcast"/>

	<!-- 事务注解支持 proxy-target-class="true" 强制使用cglib代理 -->
	<tx:annotation-driven proxy-target-class="true" />
	
	<!-- 整合 spring data jpa -->
	<jpa:repositories base-package="cn.itcast.bos.dao" />

	<jaxws:client id="customerService"
		serviceClass="cn.itcast.crm.service.ws.CustomerService" address="http://localhost:8081/crm/ws/customer?wsdl"></jaxws:client>
	
<!-- 	给bos_fore提供保存订单的服务 -->
    <bean id="orderService" class="cn.itcast.crm.service.take_delivery.impl.OrderServiceImpl"></bean>
	
	<jaxws:server address="/order">
	 <jaxws:serviceBean>
	  <ref bean="orderService"/>
	 </jaxws:serviceBean>
	</jaxws:server>
	
<!-- 	shiro框架的相关配置开始 -->
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">	
	<!-- 	    安全管理器 是shiro框架的核心 中央枢纽 -->
		<property name="securityManager" ref="securityManager" />	
	<!-- 		如果没有当前登录人访问资源时跳转到login.html -->
		<property name="loginUrl" value="/login.html" /> 
	<!-- 		如果访问的资源没有相关权限时跳转到error.html -->
		<property name="unauthorizedUrl" value="/error.html" /> 
	<!-- 过滤器链 -->
		<property name="filterChainDefinitions">
			<value>					
				/error.html = anon
				/validatecode.jsp = anon
				/userAction_login.action=anon
<!-- 				具有courier权限才能访问courier.html -->
                /**/courier.html=perms["courier","快递员管理"] 
                <!-- 具有area权限才能访问area.html -->
                /**/area.html=perms["area"]
<!-- 				/js/** = anon -->
<!-- 				/css/** = anon -->
<!-- 				/**/**所有的目录 -->
				/**/** = authc		
<!-- 				/* = authc		 -->
			</value>
		</property>
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="bosRealm"></property>
		<property name="cacheManager" ref="ehCacheManager"></property>
	</bean>
	<bean id="bosRealm" class="cn.itcast.bos.action.realm.BOSRealm"></bean>
	
	<bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
	  <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>
	
	<!-- 第二种权限控制方式：注解方式（底层基于代理技术实现的） -->
	<!-- 自动代理 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 强制使用cglib方式创建代理对象 -->
		<property name="proxyTargetClass" value="true"/>
	</bean>
	<!-- 切面 -->
	<bean id="authorizationAttributeSourceAdvisor"
		 class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
<!-- 		shiro框架的相关配置结束 -->
	
	<!-- 定义一个任务类 -->
	<bean id="workBillJob" class="cn.itcast.bos.service.job.WorkBillJob">
	</bean>
	<!-- 任务类描述 -->
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="workBillJob"></property>
		<property name="targetMethod" value="sendMail"></property>
	</bean>
	<!-- 触发器  -->
	<bean id="mailTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail"></property>
		<property name="cronExpression" value="0 2 18 6 8 ? 2018"></property>
	</bean>
	<!-- 总管理容器 -->
	<bean id="startQuartz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" >
		<property name="triggers">
			<list>
				<ref bean="mailTrigger"/>
			</list>
		</property>
	</bean>
	
</beans>